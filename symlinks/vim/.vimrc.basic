""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" # .vimrc.basic
" ## A far more compatible (and basic) .vimrc
" 
" This contains the very basics of my vim setup, mostly just mappings and a couple of autocmds.
" The idea is that this file can be parsed and evaluated by something like IdeaVim or VsVim, which
" don't support plugins or proper Vimscript. It is included by my full .vimrc.
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Basics
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible
let mapleader=","
let maplocalleader="\\"
set spelllang=en_us spellfile=$HOME/.vim/spell/en-utf-8.add


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Dvorak
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" movement keys (also make them nice to soft wrapping)
noremap h h
noremap H H
noremap t gj
" Not sure about this one
noremap T L
noremap n gk
" Not sure about this one
noremap N J
noremap s l
noremap S L

" restore access to the commands we just overrode
noremap j n
noremap J N
noremap k s
noremap K S
noremap l t
noremap L T

" easy access to the beginning and end of lines, being nice to soft wrapping
noremap _ g$
noremap - g^

" break old habits
noremap $ <nop>
noremap ^ <nop>

" don't use arrow keys
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" .vimrc
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" make it easy to edit the .vimrc
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
exe "nnoremap <leader>evb :vsplit" expand('<sfile>:p') . "<cr>"

" automagically reload the .vimrc after editing	
autocmd! bufwritepost $MYVIMRC source %
exe "autocmd! bufwritepost" expand('<sfile>:p') "source %"


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Misc
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" I often hit shift-q when trying to hit ;q, so disable it
nnoremap Q <Nop>

" I kept hitting CMD-Q instead of ;q, so here's another way
noremap <leader>c :xit<CR>
noremap <leader>w :write<CR>

" since ; is easier than :
noremap ; :
noremap : <nop>

" stolen from Gary Bernhardt: switch to the last used file
nnoremap <leader><leader> <c-^>

" when specifying a movement, use p for everything inside the parenthesies (ex. cp)
onoremap p i(

" copy and paste from the real clipboard
nnoremap <leader>p "+p
nnoremap <leader>P "+P
vnoremap <leader>y "+y

" use escape to end a search
nnoremap <silent> <Esc> :nohlsearch<CR><Esc>

set laststatus=2                " always show the status line
set hidden                      " don't hide buffers that are in the background
set autowrite                   " save the buffer when it enters the background
set textwidth=0 wrapmargin=0    " don't hard wrap TODO
set hlsearch incsearch          " highlight search results as you type
set copyindent preserveindent   " try to preserve existing indentation
set noet sts=0 sw=4 ts=4        " use the right indentation (tabs)
set autoread                    " reload files from disk if they've changed
set nolist                      " don't show invisibles
set backspace=indent,eol,start  " make backspace do the right thing
set backupcopy=yes              " not entirely sure what this does
set colorcolumn=101             " highlight the 101st column
set numberwidth=4               " make the line numbers use four columns
set nrformats=hex,bin,alpha     " make CTRL-X/CTRL-A do the right thing

" shamelessly stolen from jeffkreeftmeijer.com/vim-number: hybrid line numbers
set number relativenumber
augroup numbertoggle
autocmd!
autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
augroup END


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Window Managment
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set winheight=9                 " this gets overridden later
set winminheight=8              " make every window at least eight lines tall
set winwidth=100                " try to make the active window at least 100 lines tall
set winminwidth=30              " make every window at least 30 lines wide
au VimEnter * set winheight=999 " setting winheight=999 normally makes everything explode, idk why

nnoremap <leader>pH <C-w>H
nnoremap <leader>pT <C-w>J
nnoremap <leader>pN <C-w>K
nnoremap <leader>pS <C-w>L
nnoremap <leader>ph <C-w>h
nnoremap <leader>pt <C-w>j
nnoremap <leader>pn <C-w>k
nnoremap <leader>ps <C-w>l
nnoremap <leader>pr <C-w>r
nnoremap <leader>pe <C-w>=
nnoremap <leader>pr <C-w>r
nnoremap <leader>pw <C-w><C-w>

" Really basic runner
" To use: run it once manually (ie. :!./script.blah), then use <leader>t to write & run
nnoremap <leader>t :w\|!!<CR>


